[package]
name = "flodbadd"
version = "0.9.46"
edition = "2021"
authors = ["EDAMAME Technologies"]
description = "Network scanning and session monitoring library"
license = "Apache-2.0"
repository = "https://github.com/edamametechnologies/flodbadd"
keywords = ["network", "scanning", "security", "monitoring", "lan"]
categories = ["network-programming", "system-monitoring"]

[lints.rust]
async_fn_in_trait = "allow"

[features]
default = []
asyncpacketcapture = []
packetcapture = [ "pcap", "pnet_packet", "hickory-resolver", "dns-parser", "sysinfo", "netstat2" ]
ebpf = [ "aya", "bytemuck", "nix" ]
examples = ["clap", "tracing-subscriber"]

[dependencies]
# Core dependencies
edamame_backend = { git = "https://github.com/edamametechnologies/edamame_backend.git", branch = "main" }
# Local copy in order to allow rapid development/debug
#undeadlock = { path = "../undeadlock" }
undeadlock = { git = "https://github.com/edamametechnologies/undeadlock", branch = "main" }
# Local copy in order to allow rapid development/debug
#edamame_models = { path = "../edamame_models" }
edamame_models = { git = "https://github.com/edamametechnologies/threatmodels-rs", branch = "main" }

# Global statics w/ mutex
lazy_static = "1.4"
once_cell = "1.19.0"

# JSON
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
uuid = { version = "1.10.0", features = ["v4", "v5", "fast-rng", "macro-diagnostics"] }

# Hashing
sha2 = "0.10.8"
hex = "0.4.3"

# Logging
tracing = "0.1"
tracing-subscriber = { version = "0.3", optional = true }

# Async
parking_lot = "0.12.3"
futures-util = "0.3.30"
tokio = { version = "1", features = ["full"] }
dashmap = "6.0.1"

# Time
chrono = { version = "0.4.38", features = ["serde"] }

# Machine Learning
# User our own fork
# extended-isolation-forest = "0.2.3"
extended-isolation-forest = { git = "https://github.com/edamametechnologies/extended-isolation-forest" }

# Network utils
socket2 = "0.5.8"
ipnet = "2.9.0"
wez-mdns = { git = "https://github.com/edamametechnologies/mdns" }

# Misc
# 0.9 version is creating issues
rand = "0.8.5"
anyhow = "1.0"
regex = "1.10.6"
encoding_rs = "0.8.34"
thiserror = "2.0.12"
serial_test = "3.1.1"
sorted-vec = "0.8.6"

# Strum
strum_macros = "0.27.0"
rayon = "1.7"
futures = "0.3.31"

# Not WASI/WASIX/WASM
[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
eui48 = { version = "1.1.0", features = ["disp_hexstring", "serde"] }
macaddr = { version = "1.0.1", features = ["serde"] }
oui = "0.8.1"
csv = "1.0.10"
reqwest = { version = "0.12.5", default-features = false, features = ["gzip", "rustls-tls"] }

# Platform-specific dependencies
[target.'cfg(any(target_os = "macos", target_os = "windows", target_os = "linux"))'.dependencies]
network-interface = "2.0.0"

# Capture dependencies (optional)
pcap = { version = "2.2.0", optional = true, features = ["capture-stream"] }
hickory-resolver = { version = "0.25.1", optional = true }
dns-parser = { git = "https://github.com/edamametechnologies/dns-parser", branch = "pr47", optional = true }
pnet_packet = { version = "0.35.0", optional = true }
sysinfo = { version = "0.35.2", optional = true }
netstat2 = { version = "0.11.0", optional = true }

[target.'cfg(any(target_os = "macos", target_os = "linux"))'.dependencies]
arp-toolkit = "0.3.2"
users = "0.11.0"

# Windows
[target.'cfg(target_os = "windows")'.dependencies]
powershell_script = "1.1.0"
windows = { version = "0.61.0", features = [ 
    "Data_Xml_Dom", 
    "Win32_Foundation", 
    "Win32_Security", 
    "Win32_System_Threading", 
    "Win32_System_SystemServices", 
    "Win32_UI_WindowsAndMessaging", 
    "Win32_NetworkManagement", 
    "Win32_NetworkManagement_IpHelper", 
    "Win32_Networking", 
    "Win32_Networking_WinSock", 
    "Win32_NetworkManagement_Ndis", 
    "Win32_NetworkManagement_NetManagement" 
] }

# Linux eBPF
[target.'cfg(target_os = "linux")'.dependencies]
aya = { version = "0.13.1", features = ["async_tokio"], optional = true }
bytemuck = { version = "1.15", features = ["derive"], optional = true }
nix = { version = "0.30.1", optional = true, features = [ "user" ] }

# Add example dependencies
clap = { version = "4.0", features = ["derive"], optional = true }

[dev-dependencies]
criterion = "0.6"
tempfile = "3.8"
mockall = "0.13.1"

[build-dependencies]
# Npcap
# Prevent reqwest from using native-tls
reqwest = { version = "0.12.5", default-features = false, features = ["blocking", "rustls-tls"] }
# 4.2.0 creates issues
zip = "3.0.0"

[[example]]
name = "lan_scan"
required-features = ["examples"]

[[example]]
name = "capture_sessions"
required-features = ["examples"]

[[example]]
name = "whitelist_management"
required-features = ["examples"]

[[example]]
name = "session_analyzer"
required-features = ["examples"]

[lib]
name = "flodbadd"
path = "src/lib.rs" 
